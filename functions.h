int extractIntegerPart(float num);
int TaskNumCheck(int tasknum);
float checkFloat();
int checkInt();
int ContinueWish(int tasknumber);
float taskOneInput();
void WordCancellation(char*str, int len);
int CompareTwoWords(char* word1, char* word2);
int findStringNumber(FILE *taskFile, char* buffer);
void spaceFinder(char*word);
void invertSpace(char*word);
void pushArray(int* array, int size, int j);
int findWordNumber(char*buffer, int length);
void pushList(int* array, int size, int j);
void pushFloatArray(float* array, int size, int j);
int addNewCar(struct Car* cars, int carCount);
void readFromStrToStruct(char*buffer, char*IndefWord, int bufferLength, struct Car* cars, int currentCar);
void readFromFileToStruct(int stringNumber, char*buffer, char* IndefWord, FILE*taskFile, struct Car* cars);
void writeToFile(char* filePath, FILE*taskFile,int carCount, struct Car* cars);
void freeMemory(struct Car*cars, int carCount);
void showContent(struct Car*cars, int carCount);
int deleteElement(struct Car*cars, int carCount, int flag);
int deleteModelsWithMinLifeCycle(struct Car*cars, int carCount);
void BubbleSort(float *array, char**list, int size);
int wordRepeater(char** bodytypeList,int allEquipments, char* word);
int createListOfModels(struct Car*cars, int carCount,float* equipmentLifeCycle,char** bodytypeList,int allEquipments);
void freeArrays(float *equipmentLifeCycle, char** bodytypeList, int allEquipments);
void printList(float *equipmentLifeCycle, char** bodytypeList, int allEquipments);
void chooseFunction(struct Car* cars, int carCount, char* filePath, FILE* taskFile);
int findAllEquipments(struct Car*cars,int carCount);
int writeListWithTypicalCycle(char** bodytypeList, float *equipmentLifeCycle, int allEquipments);
void writeLifeCyclesToArray(struct Car*cars, int carCount, float *equipmentLifeCycle);
